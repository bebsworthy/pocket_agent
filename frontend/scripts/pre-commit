#!/bin/bash

# Pre-commit hook for Pocket Agent Mobile App
# This script runs code quality checks before each commit

set -e

echo "üîç Running pre-commit quality checks..."

# Get the root directory of the git repository
ROOT_DIR=$(git rev-parse --show-toplevel)
cd "$ROOT_DIR/frontend"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if gradlew exists
if [ ! -f "./gradlew" ]; then
    print_error "gradlew not found. Please run this script from the project root."
    exit 1
fi

# Make gradlew executable
chmod +x ./gradlew

# Run code quality checks
print_status "Running Ktlint check..."
if ! ./gradlew ktlintCheck; then
    print_error "Ktlint check failed. Run './gradlew ktlintFormat' to fix formatting issues."
    exit 1
fi

print_status "Running Detekt static analysis..."
if ! ./gradlew detekt; then
    print_error "Detekt analysis failed. Please fix the issues reported above."
    exit 1
fi

print_status "Running Spotless check..."
if ! ./gradlew spotlessCheck; then
    print_error "Spotless check failed. Run './gradlew spotlessApply' to fix formatting issues."
    exit 1
fi

print_status "Running Android Lint..."
if ! ./gradlew lint; then
    print_warning "Android Lint found issues. Check the lint report for details."
    # Note: We don't exit here as lint issues might be warnings
fi

print_status "Running unit tests..."
if ! ./gradlew testDebugUnitTest; then
    print_error "Unit tests failed. Please fix the failing tests."
    exit 1
fi

print_status "‚úÖ All pre-commit checks passed!"
echo "üìù Commit can proceed."